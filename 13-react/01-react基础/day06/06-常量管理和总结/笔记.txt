刚才把所有的常量都定义在不同的文件下，如下：
export function toggleLoading(flag){  
    return{
        type:"TOGGLE_LOADING",
        flag
    }
}
-------------------
export default function loading(state=false,action){
    switch(action.type){
        case "TOGGLE_LOADING":
            return action.flag;
        default:
            return state
    }
}

-------------------------
通常会把这些常量定义在单独的文件中，和vuex中的mution-types一个道理。

常量也要集中式管理，放到constants文件中。
-------------------------

总结：
    redux:  
        createStore  ----> store  | getState/dispath/subscribe
        applyMiddware   使用redux中间件   redux-thunk
        combineReducers   合并多个reducer为一个reducer
        ...

    store:
        创建store 通过createStore   准备：state  action  reducer 
        使用store getState/dispath/subscribe
    
    在react中使用redux，需要借助react-redux: 
        把react和redux连接起来  
        3个1：
            1个思想：组件分类思想
            1个方法：connect(mapStateToProps,{actions})(展示组件)
            1个组件：Provider  包在App组件外  可以让后代组件访问到store

强调：redux通常用在大中型webapp项目中，如果是小型的webapp，能不使用就不使用。







